{"ast":null,"code":"import { isBorderStyle } from './utils.esm.js';\n\n/**\n * A function that implements expansion for \"border-left\", it's simplified - check usage examples.\n *\n * @example\n *  borderLeft('2px')\n *  borderLeft('solid')\n *  borderLeft('2px', 'solid')\n *  borderLeft('solid', '2px')\n *  borderLeft('2px', 'solid', 'red')\n *  borderLeft('solid', '2px', 'red')\n *\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/border-left\n */\nfunction borderLeft(...values) {\n  if (isBorderStyle(values[0])) {\n    return Object.assign({\n      borderLeftStyle: values[0]\n    }, values[1] && {\n      borderLeftWidth: values[1]\n    }, values[2] && {\n      borderLeftColor: values[2]\n    });\n  }\n  return Object.assign({\n    borderLeftWidth: values[0]\n  }, values[1] && {\n    borderLeftStyle: values[1]\n  }, values[2] && {\n    borderLeftColor: values[2]\n  });\n}\nexport { borderLeft };","map":{"version":3,"names":["borderLeft","values","isBorderStyle","Object","assign","borderLeftStyle","borderLeftWidth","borderLeftColor"],"sources":["/Users/gideoncrawley/Projects/Lookeeloo/packages/core/src/shorthands/borderLeft.ts"],"sourcesContent":["import type { GriffelStyle } from '@griffel/style-types';\n\nimport type { BorderColorInput, BorderStyleInput, BorderWidthInput } from './types';\nimport { isBorderStyle } from './utils';\n\ntype BorderLeftStyle = Pick<GriffelStyle, 'borderLeftColor' | 'borderLeftStyle' | 'borderLeftWidth'>;\n\nexport function borderLeft(width: BorderWidthInput): BorderLeftStyle;\nexport function borderLeft(style: BorderStyleInput): BorderLeftStyle;\nexport function borderLeft(width: BorderWidthInput, style: BorderStyleInput): BorderLeftStyle;\nexport function borderLeft(style: BorderStyleInput, width: BorderWidthInput): BorderLeftStyle;\nexport function borderLeft(width: BorderWidthInput, style: BorderStyleInput, color: BorderColorInput): BorderLeftStyle;\nexport function borderLeft(style: BorderStyleInput, width: BorderWidthInput, color: BorderColorInput): BorderLeftStyle;\n\n/**\n * A function that implements expansion for \"border-left\", it's simplified - check usage examples.\n *\n * @example\n *  borderLeft('2px')\n *  borderLeft('solid')\n *  borderLeft('2px', 'solid')\n *  borderLeft('solid', '2px')\n *  borderLeft('2px', 'solid', 'red')\n *  borderLeft('solid', '2px', 'red')\n *\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/border-left\n */\nexport function borderLeft(\n  ...values: [BorderWidthInput | BorderStyleInput, (BorderWidthInput | BorderStyleInput)?, BorderColorInput?]\n): BorderLeftStyle {\n  if (isBorderStyle(values[0])) {\n    return {\n      borderLeftStyle: values[0],\n      ...(values[1] && ({ borderLeftWidth: values[1] } as BorderLeftStyle)),\n      ...(values[2] && { borderLeftColor: values[2] }),\n    };\n  }\n\n  return {\n    borderLeftWidth: values[0],\n    ...(values[1] && ({ borderLeftStyle: values[1] } as BorderLeftStyle)),\n    ...(values[2] && { borderLeftColor: values[2] }),\n  };\n}\n"],"mappings":";;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,UAAUA,CACxB,GAAGC,MAAwG,EAC1F;EACjB,IAAIC,aAAa,CAACD,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;IAC5B,OAAAE,MAAA,CAAAC,MAAA;MACEC,eAAe,EAAEJ,MAAM,CAAC,CAAC;IAAC,GACtBA,MAAM,CAAC,CAAC,CAAC,IAAK;MAAEK,eAAe,EAAEL,MAAM,CAAC,CAAC;IAAE,CAAqB,EAChEA,MAAM,CAAC,CAAC,CAAC,IAAI;MAAEM,eAAe,EAAEN,MAAM,CAAC,CAAC;KAAG;EAEnD;EAEA,OAAAE,MAAA,CAAAC,MAAA;IACEE,eAAe,EAAEL,MAAM,CAAC,CAAC;EAAC,GACtBA,MAAM,CAAC,CAAC,CAAC,IAAK;IAAEI,eAAe,EAAEJ,MAAM,CAAC,CAAC;EAAE,CAAqB,EAChEA,MAAM,CAAC,CAAC,CAAC,IAAI;IAAEM,eAAe,EAAEN,MAAM,CAAC,CAAC;GAAG;AAEnD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}