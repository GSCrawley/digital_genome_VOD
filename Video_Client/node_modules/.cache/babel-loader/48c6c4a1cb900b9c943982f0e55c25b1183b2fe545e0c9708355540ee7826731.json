{"ast":null,"code":"/**\n * Default implementation of insertion factory. Inserts styles only once per renderer and performs\n * insertion immediately after styles computation.\n *\n * @internal\n */\nconst insertionFactory = () => {\n  const insertionCache = {};\n  return function insertStyles(renderer, cssRules) {\n    if (insertionCache[renderer.id] === undefined) {\n      renderer.insertCSSRules(cssRules);\n      insertionCache[renderer.id] = true;\n    }\n  };\n};\nexport { insertionFactory };","map":{"version":3,"names":["insertionFactory","insertionCache","insertStyles","renderer","cssRules","id","undefined","insertCSSRules"],"sources":["/Users/gideoncrawley/Projects/Lookeeloo/packages/core/src/insertionFactory.ts"],"sourcesContent":["import type { CSSRulesByBucket, GriffelInsertionFactory, GriffelRenderer } from './types';\n\n/**\n * Default implementation of insertion factory. Inserts styles only once per renderer and performs\n * insertion immediately after styles computation.\n *\n * @internal\n */\nexport const insertionFactory: GriffelInsertionFactory = () => {\n  const insertionCache: Record<string, boolean> = {};\n\n  return function insertStyles(renderer: GriffelRenderer, cssRules: CSSRulesByBucket) {\n    if (insertionCache[renderer.id] === undefined) {\n      renderer.insertCSSRules(cssRules!);\n      insertionCache[renderer.id] = true;\n    }\n  };\n};\n"],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA;AACa,MAAAA,gBAAyC,GAAGA,CAAA,KAAM;EAC7D,MAAMC,cAAuC,GAAG,EAAE;EAElD,OAAO,SAASC,YAAYA,CAACC,QAAyB,EAAEC,QAA0B,EAAE;IAClF,IAAIH,cAAc,CAACE,QAAQ,CAACE,EAAE,CAAC,KAAKC,SAAS,EAAE;MAC7CH,QAAQ,CAACI,cAAc,CAACH,QAAS,CAAC;MAClCH,cAAc,CAACE,QAAQ,CAACE,EAAE,CAAC,GAAG,IAAI;IACpC;GACD;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}