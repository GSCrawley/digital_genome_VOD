{"ast":null,"code":"import { makeStaticStyles as makeStaticStyles$1 } from '@griffel/core';\nimport { insertionFactory } from './insertionFactory.esm.js';\nimport { useRenderer } from './RendererContext.esm.js';\nfunction makeStaticStyles(styles) {\n  const getStyles = makeStaticStyles$1(styles, insertionFactory);\n  if (process.env.NODE_ENV === 'test') {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    return () => {};\n  }\n  return function useStaticStyles() {\n    const renderer = useRenderer();\n    const options = {\n      renderer\n    };\n    return getStyles(options);\n  };\n}\nexport { makeStaticStyles };","map":{"version":3,"names":["makeStaticStyles","styles","getStyles","makeStaticStyles$1","insertionFactory","process","env","NODE_ENV","useStaticStyles","renderer","useRenderer","options"],"sources":["/Users/gideoncrawley/Projects/Lookeeloo/packages/react/src/makeStaticStyles.ts"],"sourcesContent":["import { makeStaticStyles as vanillaMakeStaticStyles } from '@griffel/core';\nimport type { GriffelStaticStyles, MakeStaticStylesOptions } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\n\nexport function makeStaticStyles(styles: GriffelStaticStyles | GriffelStaticStyles[]) {\n  const getStyles = vanillaMakeStaticStyles(styles, insertionFactory);\n\n  if (process.env.NODE_ENV === 'test') {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    return () => {};\n  }\n\n  return function useStaticStyles(): void {\n    const renderer = useRenderer();\n    const options: MakeStaticStylesOptions = { renderer };\n\n    return getStyles(options);\n  };\n}\n"],"mappings":";;;AAMO,SAASA,gBAAgBA,CAACC,MAAmD,EAAE;EACpF,MAAMC,SAAS,GAAGC,kBAAuB,CAACF,MAAM,EAAEG,gBAAgB,CAAC;EAEnE,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,EAAE;IACnC;IACA,OAAO,MAAM,EAAE;EACjB;EAEA,OAAO,SAASC,eAAeA,CAAA,EAAS;IACtC,MAAMC,QAAQ,GAAGC,WAAW,EAAE;IAC9B,MAAMC,OAAgC,GAAG;MAAEF;KAAU;IAErD,OAAOP,SAAS,CAACS,OAAO,CAAC;GAC1B;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}