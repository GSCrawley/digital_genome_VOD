{"ast":null,"code":"import { reduceToClassNameForSlots } from './runtime/reduceToClassNameForSlots.esm.js';\nimport { isDevToolsEnabled } from './devtools/isDevToolsEnabled.esm.js';\nimport { debugData } from './devtools/store.esm.js';\n\n/**\n * A version of makeStyles() that accepts build output as an input and skips all runtime transforms & DOM insertion.\n *\n * @internal\n */\nfunction __css(classesMapBySlot) {\n  let ltrClassNamesForSlots = null;\n  let rtlClassNamesForSlots = null;\n  function computeClasses(options) {\n    const {\n      dir\n    } = options;\n    const isLTR = dir === 'ltr';\n    if (isLTR) {\n      if (ltrClassNamesForSlots === null) {\n        ltrClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    } else {\n      if (rtlClassNamesForSlots === null) {\n        rtlClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    }\n    const classNamesForSlots = isLTR ? ltrClassNamesForSlots : rtlClassNamesForSlots;\n    if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n      debugData.addSequenceDetails(classNamesForSlots);\n    }\n    return classNamesForSlots;\n  }\n  return computeClasses;\n}\nexport { __css };","map":{"version":3,"names":["__css","classesMapBySlot","ltrClassNamesForSlots","rtlClassNamesForSlots","computeClasses","options","dir","isLTR","reduceToClassNameForSlots","classNamesForSlots","process","env","NODE_ENV","isDevToolsEnabled","debugData","addSequenceDetails"],"sources":["/Users/gideoncrawley/Projects/Lookeeloo/packages/core/src/__css.ts"],"sourcesContent":["import { debugData, isDevToolsEnabled } from './devtools';\nimport { reduceToClassNameForSlots } from './runtime/reduceToClassNameForSlots';\nimport type { MakeStylesOptions } from './makeStyles';\nimport type { CSSClassesMapBySlot } from './types';\n\n/**\n * A version of makeStyles() that accepts build output as an input and skips all runtime transforms & DOM insertion.\n *\n * @internal\n */\nexport function __css<Slots extends string>(classesMapBySlot: CSSClassesMapBySlot<Slots>) {\n  let ltrClassNamesForSlots: Record<Slots, string> | null = null;\n  let rtlClassNamesForSlots: Record<Slots, string> | null = null;\n\n  function computeClasses(options: Pick<MakeStylesOptions, 'dir'>): Record<Slots, string> {\n    const { dir } = options;\n    const isLTR = dir === 'ltr';\n\n    if (isLTR) {\n      if (ltrClassNamesForSlots === null) {\n        ltrClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    } else {\n      if (rtlClassNamesForSlots === null) {\n        rtlClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\n      }\n    }\n\n    const classNamesForSlots = isLTR\n      ? (ltrClassNamesForSlots as Record<Slots, string>)\n      : (rtlClassNamesForSlots as Record<Slots, string>);\n\n    if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n      debugData.addSequenceDetails(classNamesForSlots!);\n    }\n\n    return classNamesForSlots;\n  }\n\n  return computeClasses;\n}\n"],"mappings":";;;;AAKA;AACA;AACA;AACA;AACA;AACO,SAASA,KAAKA,CAAuBC,gBAA4C,EAAE;EACxF,IAAIC,qBAAmD,GAAG,IAAI;EAC9D,IAAIC,qBAAmD,GAAG,IAAI;EAE9D,SAASC,cAAcA,CAACC,OAAuC,EAAyB;IACtF,MAAM;MAAEC;IAAI,CAAC,GAAGD,OAAO;IACvB,MAAME,KAAK,GAAGD,GAAG,KAAK,KAAK;IAE3B,IAAIC,KAAK,EAAE;MACT,IAAIL,qBAAqB,KAAK,IAAI,EAAE;QAClCA,qBAAqB,GAAGM,yBAAyB,CAACP,gBAAgB,EAAEK,GAAG,CAAC;MAC1E;IACF,CAAC,MAAM;MACL,IAAIH,qBAAqB,KAAK,IAAI,EAAE;QAClCA,qBAAqB,GAAGK,yBAAyB,CAACP,gBAAgB,EAAEK,GAAG,CAAC;MAC1E;IACF;IAEA,MAAMG,kBAAkB,GAAGF,KAAK,GAC3BL,qBAAqB,GACrBC,qBAA+C;IAEpD,IAAIO,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIC,iBAAiB,EAAE;MAC9DC,SAAS,CAACC,kBAAkB,CAACN,kBAAmB,CAAC;IACnD;IAEA,OAAOA,kBAAkB;EAC3B;EAEA,OAAOL,cAAc;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}