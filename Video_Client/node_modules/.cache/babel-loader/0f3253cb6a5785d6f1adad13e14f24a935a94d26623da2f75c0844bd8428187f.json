{"ast":null,"code":"import hashString from '@emotion/hash';\nimport { convertProperty, convert } from 'rtl-css-js/core';\nimport { UNSUPPORTED_CSS_PROPERTIES, HASH_PREFIX } from '../constants.esm.js';\nimport { compileAtomicCSSRule } from './compileAtomicCSSRule.esm.js';\nimport { compileKeyframeRule, compileKeyframesCSS } from './compileKeyframeCSS.esm.js';\nimport { generateCombinedQuery } from './utils/generateCombinedMediaQuery.esm.js';\nimport { isMediaQuerySelector } from './utils/isMediaQuerySelector.esm.js';\nimport { isLayerSelector } from './utils/isLayerSelector.esm.js';\nimport { isNestedSelector } from './utils/isNestedSelector.esm.js';\nimport { isSupportQuerySelector } from './utils/isSupportQuerySelector.esm.js';\nimport { isContainerQuerySelector } from './utils/isContainerQuerySelector.esm.js';\nimport { normalizeNestedProperty } from './utils/normalizeNestedProperty.esm.js';\nimport { isObject } from './utils/isObject.esm.js';\nimport { getStyleBucketName } from './getStyleBucketName.esm.js';\nimport { hashClassName } from './utils/hashClassName.esm.js';\nimport { hashPropertyKey } from './utils/hashPropertyKey.esm.js';\nimport { trimSelector } from './utils/trimSelector.esm.js';\nimport { warnAboutUnresolvedRule } from './warnings/warnAboutUnresolvedRule.esm.js';\nimport { warnAboutUnsupportedProperties } from './warnings/warnAboutUnsupportedProperties.esm.js';\nfunction pushToClassesMap(classesMap, propertyKey, ltrClassname, rtlClassname) {\n  classesMap[propertyKey] = rtlClassname ? [ltrClassname, rtlClassname] : ltrClassname;\n}\nfunction createBucketEntry(cssRule, metadata) {\n  if (metadata) {\n    return [cssRule, metadata];\n  }\n  return cssRule;\n}\nfunction pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS, media) {\n  var _cssRulesByBucket$sty;\n  let metadata;\n  if (styleBucketName === 'm' && media) {\n    metadata = {\n      m: media\n    };\n  }\n  (_cssRulesByBucket$sty = cssRulesByBucket[styleBucketName]) != null ? _cssRulesByBucket$sty : cssRulesByBucket[styleBucketName] = [];\n  if (ltrCSS) {\n    cssRulesByBucket[styleBucketName].push(createBucketEntry(ltrCSS, metadata));\n  }\n  if (rtlCSS) {\n    cssRulesByBucket[styleBucketName].push(createBucketEntry(rtlCSS, metadata));\n  }\n}\n\n/**\n * Transforms input styles to classes maps & CSS rules.\n *\n * @internal\n */\nfunction resolveStyleRules(styles, selectors = [], media = '', layer = '', support = '', container = '', cssClassesMap = {}, cssRulesByBucket = {}, rtlValue) {\n  // eslint-disable-next-line guard-for-in\n  for (const property in styles) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (UNSUPPORTED_CSS_PROPERTIES.hasOwnProperty(property)) {\n      warnAboutUnsupportedProperties(property, styles[property]);\n      continue;\n    }\n    const value = styles[property];\n\n    // eslint-disable-next-line eqeqeq\n    if (value == null) {\n      continue;\n    }\n    if (typeof value === 'string' || typeof value === 'number') {\n      const selector = trimSelector(selectors.join(''));\n\n      // uniq key based on a hash of property & selector, used for merging later\n      const key = hashPropertyKey(selector, container, media, support, property);\n      const className = hashClassName({\n        container,\n        media,\n        layer,\n        value: value.toString(),\n        support,\n        selector,\n        property\n      });\n      const rtlDefinition = rtlValue && {\n        key: property,\n        value: rtlValue\n      } || convertProperty(property, value);\n      const flippedInRtl = rtlDefinition.key !== property || rtlDefinition.value !== value;\n      const rtlClassName = flippedInRtl ? hashClassName({\n        container,\n        value: rtlDefinition.value.toString(),\n        property: rtlDefinition.key,\n        selector,\n        media,\n        layer,\n        support\n      }) : undefined;\n      const rtlCompileOptions = flippedInRtl ? {\n        rtlClassName,\n        rtlProperty: rtlDefinition.key,\n        rtlValue: rtlDefinition.value\n      } : undefined;\n      const styleBucketName = getStyleBucketName(selectors, layer, media, support, container);\n      const [ltrCSS, rtlCSS] = compileAtomicCSSRule(Object.assign({\n        className,\n        media,\n        layer,\n        selectors,\n        property,\n        support,\n        container,\n        value\n      }, rtlCompileOptions));\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS, media);\n    } else if (property === 'animationName') {\n      const animationNameValue = Array.isArray(value) ? value : [value];\n      const animationNames = [];\n      const rtlAnimationNames = [];\n      for (const keyframeObject of animationNameValue) {\n        const keyframeCSS = compileKeyframeRule(keyframeObject);\n        const rtlKeyframeCSS = compileKeyframeRule(convert(keyframeObject));\n        const animationName = HASH_PREFIX + hashString(keyframeCSS);\n        let rtlAnimationName;\n        const keyframeRules = compileKeyframesCSS(animationName, keyframeCSS);\n        let rtlKeyframeRules = [];\n        if (keyframeCSS === rtlKeyframeCSS) {\n          // If CSS for LTR & RTL are same we will re-use animationName from LTR to avoid duplication of rules in output\n          rtlAnimationName = animationName;\n        } else {\n          rtlAnimationName = HASH_PREFIX + hashString(rtlKeyframeCSS);\n          rtlKeyframeRules = compileKeyframesCSS(rtlAnimationName, rtlKeyframeCSS);\n        }\n        for (let i = 0; i < keyframeRules.length; i++) {\n          pushToCSSRules(cssRulesByBucket,\n          // keyframes styles should be inserted into own bucket\n          'k', keyframeRules[i], rtlKeyframeRules[i], media);\n        }\n        animationNames.push(animationName);\n        rtlAnimationNames.push(rtlAnimationName);\n      }\n      resolveStyleRules({\n        animationName: animationNames.join(', ')\n      }, selectors, media, layer, support, container, cssClassesMap, cssRulesByBucket, rtlAnimationNames.join(', '));\n    } else if (Array.isArray(value)) {\n      // not animationName property but array in the value => fallback values\n      if (value.length === 0) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(`makeStyles(): An empty array was passed as input to \"${property}\", the property will be omitted in the styles.`);\n        }\n        continue;\n      }\n      const selector = trimSelector(selectors.join(''));\n      const key = hashPropertyKey(selector, container, media, support, property);\n      const className = hashClassName({\n        container,\n        media,\n        layer,\n        value: value.map(v => (v != null ? v : '').toString()).join(';'),\n        support,\n        selector,\n        property\n      });\n      const rtlDefinitions = value.map(v => convertProperty(property, v));\n      const rtlPropertyConsistent = !rtlDefinitions.some(v => v.key !== rtlDefinitions[0].key);\n      if (!rtlPropertyConsistent) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('makeStyles(): mixing CSS fallback values which result in multiple CSS properties in RTL is not supported.');\n        }\n        continue;\n      }\n      const flippedInRtl = rtlDefinitions[0].key !== property || rtlDefinitions.some((v, i) => v.value !== value[i]);\n      const rtlClassName = flippedInRtl ? hashClassName({\n        container,\n        value: rtlDefinitions.map(v => {\n          var _v$value;\n          return ((_v$value = v == null ? void 0 : v.value) != null ? _v$value : '').toString();\n        }).join(';'),\n        property: rtlDefinitions[0].key,\n        selector,\n        layer,\n        media,\n        support\n      }) : undefined;\n      const rtlCompileOptions = flippedInRtl ? {\n        rtlClassName,\n        rtlProperty: rtlDefinitions[0].key,\n        rtlValue: rtlDefinitions.map(d => d.value)\n      } : undefined;\n      const styleBucketName = getStyleBucketName(selectors, layer, media, support, container);\n      const [ltrCSS, rtlCSS] = compileAtomicCSSRule(Object.assign({\n        className,\n        media,\n        layer,\n        selectors,\n        property,\n        support,\n        container,\n        value: value\n      }, rtlCompileOptions));\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS, media);\n    } else if (isObject(value)) {\n      if (isNestedSelector(property)) {\n        resolveStyleRules(value, selectors.concat(normalizeNestedProperty(property)), media, layer, support, container, cssClassesMap, cssRulesByBucket);\n      } else if (isMediaQuerySelector(property)) {\n        const combinedMediaQuery = generateCombinedQuery(media, property.slice(6).trim());\n        resolveStyleRules(value, selectors, combinedMediaQuery, layer, support, container, cssClassesMap, cssRulesByBucket);\n      } else if (isLayerSelector(property)) {\n        const combinedLayerQuery = (layer ? `${layer}.` : '') + property.slice(6).trim();\n        resolveStyleRules(value, selectors, media, combinedLayerQuery, support, container, cssClassesMap, cssRulesByBucket);\n      } else if (isSupportQuerySelector(property)) {\n        const combinedSupportQuery = generateCombinedQuery(support, property.slice(9).trim());\n        resolveStyleRules(value, selectors, media, layer, combinedSupportQuery, container, cssClassesMap, cssRulesByBucket);\n      } else if (isContainerQuerySelector(property)) {\n        // TODO implement nested container queries if needed\n        // The only way to target multiple containers is to nest container queries\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/@container#nested_container_queries\n        const containerQuery = property.slice(10).trim();\n        resolveStyleRules(value, selectors, media, layer, support, containerQuery, cssClassesMap, cssRulesByBucket);\n      } else {\n        warnAboutUnresolvedRule(property, value);\n      }\n    }\n  }\n  return [cssClassesMap, cssRulesByBucket];\n}\nexport { resolveStyleRules };","map":{"version":3,"names":["pushToClassesMap","classesMap","propertyKey","ltrClassname","rtlClassname","createBucketEntry","cssRule","metadata","pushToCSSRules","cssRulesByBucket","styleBucketName","ltrCSS","rtlCSS","media","_cssRulesByBucket$sty","m","push","resolveStyleRules","styles","selectors","layer","support","container","cssClassesMap","rtlValue","property","UNSUPPORTED_CSS_PROPERTIES","hasOwnProperty","warnAboutUnsupportedProperties","value","selector","trimSelector","join","key","hashPropertyKey","className","hashClassName","toString","rtlDefinition","convertProperty","flippedInRtl","rtlClassName","undefined","rtlCompileOptions","rtlProperty","getStyleBucketName","compileAtomicCSSRule","Object","assign","animationNameValue","Array","isArray","animationNames","rtlAnimationNames","keyframeObject","keyframeCSS","compileKeyframeRule","rtlKeyframeCSS","convert","animationName","HASH_PREFIX","hashString","rtlAnimationName","keyframeRules","compileKeyframesCSS","rtlKeyframeRules","i","length","process","env","NODE_ENV","console","warn","map","v","rtlDefinitions","rtlPropertyConsistent","some","error","_v$value","d","isObject","isNestedSelector","concat","normalizeNestedProperty","isMediaQuerySelector","combinedMediaQuery","generateCombinedQuery","slice","trim","isLayerSelector","combinedLayerQuery","isSupportQuerySelector","combinedSupportQuery","isContainerQuerySelector","containerQuery","warnAboutUnresolvedRule"],"sources":["/Users/gideoncrawley/Projects/Lookeeloo/packages/core/src/runtime/resolveStyleRules.ts"],"sourcesContent":["import hashString from '@emotion/hash';\nimport type { GriffelAnimation, GriffelStyle } from '@griffel/style-types';\nimport { convert, convertProperty } from 'rtl-css-js/core';\n\nimport { HASH_PREFIX, UNSUPPORTED_CSS_PROPERTIES } from '../constants';\nimport type { CSSClassesMap, CSSRulesByBucket, StyleBucketName, CSSBucketEntry } from '../types';\nimport type { CompileAtomicCSSOptions } from './compileAtomicCSSRule';\nimport { compileAtomicCSSRule } from './compileAtomicCSSRule';\nimport { compileKeyframeRule, compileKeyframesCSS } from './compileKeyframeCSS';\nimport { generateCombinedQuery } from './utils/generateCombinedMediaQuery';\nimport { isMediaQuerySelector } from './utils/isMediaQuerySelector';\nimport { isLayerSelector } from './utils/isLayerSelector';\nimport { isNestedSelector } from './utils/isNestedSelector';\nimport { isSupportQuerySelector } from './utils/isSupportQuerySelector';\nimport { isContainerQuerySelector } from './utils/isContainerQuerySelector';\nimport { normalizeNestedProperty } from './utils/normalizeNestedProperty';\nimport { isObject } from './utils/isObject';\nimport { getStyleBucketName } from './getStyleBucketName';\nimport { hashClassName } from './utils/hashClassName';\nimport { hashPropertyKey } from './utils/hashPropertyKey';\nimport { trimSelector } from './utils/trimSelector';\nimport { warnAboutUnresolvedRule } from './warnings/warnAboutUnresolvedRule';\nimport { warnAboutUnsupportedProperties } from './warnings/warnAboutUnsupportedProperties';\n\nfunction pushToClassesMap(\n  classesMap: CSSClassesMap,\n  propertyKey: string,\n  ltrClassname: string,\n  rtlClassname: string | undefined,\n) {\n  classesMap[propertyKey] = rtlClassname ? [ltrClassname!, rtlClassname] : ltrClassname;\n}\n\nfunction createBucketEntry(cssRule: string, metadata: Record<string, unknown> | undefined): CSSBucketEntry {\n  if (metadata) {\n    return [cssRule, metadata];\n  }\n\n  return cssRule;\n}\n\nfunction pushToCSSRules(\n  cssRulesByBucket: CSSRulesByBucket,\n  styleBucketName: StyleBucketName,\n  ltrCSS: string | undefined,\n  rtlCSS: string | undefined,\n  media: string | undefined,\n) {\n  let metadata: Record<string, unknown> | undefined;\n  if (styleBucketName === 'm' && media) {\n    metadata = { m: media };\n  }\n\n  cssRulesByBucket[styleBucketName] ??= [];\n\n  if (ltrCSS) {\n    cssRulesByBucket[styleBucketName]!.push(createBucketEntry(ltrCSS, metadata));\n  }\n\n  if (rtlCSS) {\n    cssRulesByBucket[styleBucketName]!.push(createBucketEntry(rtlCSS, metadata));\n  }\n}\n\n/**\n * Transforms input styles to classes maps & CSS rules.\n *\n * @internal\n */\nexport function resolveStyleRules(\n  styles: GriffelStyle,\n  selectors: string[] = [],\n  media = '',\n  layer = '',\n  support = '',\n  container = '',\n  cssClassesMap: CSSClassesMap = {},\n  cssRulesByBucket: CSSRulesByBucket = {},\n  rtlValue?: string,\n): [CSSClassesMap, CSSRulesByBucket] {\n  // eslint-disable-next-line guard-for-in\n  for (const property in styles) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (UNSUPPORTED_CSS_PROPERTIES.hasOwnProperty(property)) {\n      warnAboutUnsupportedProperties(property, styles[property as keyof GriffelStyle]);\n      continue;\n    }\n\n    const value = styles[property as keyof GriffelStyle];\n\n    // eslint-disable-next-line eqeqeq\n    if (value == null) {\n      continue;\n    }\n\n    if (typeof value === 'string' || typeof value === 'number') {\n      const selector = trimSelector(selectors.join(''));\n\n      // uniq key based on a hash of property & selector, used for merging later\n      const key = hashPropertyKey(selector, container, media, support, property);\n      const className = hashClassName({\n        container,\n        media,\n        layer,\n        value: value.toString(),\n        support,\n        selector,\n        property,\n      });\n\n      const rtlDefinition = (rtlValue && { key: property, value: rtlValue }) || convertProperty(property, value);\n      const flippedInRtl = rtlDefinition.key !== property || rtlDefinition.value !== value;\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName({\n            container,\n            value: rtlDefinition.value.toString(),\n            property: rtlDefinition.key,\n            selector,\n            media,\n            layer,\n            support,\n          })\n        : undefined;\n      const rtlCompileOptions: Partial<CompileAtomicCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinition.key,\n            rtlValue: rtlDefinition.value,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(selectors, layer, media, support, container);\n      const [ltrCSS, rtlCSS] = compileAtomicCSSRule({\n        className,\n        media,\n        layer,\n        selectors,\n        property,\n        support,\n        container,\n        value,\n        ...rtlCompileOptions,\n      });\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS, media);\n    } else if (property === 'animationName') {\n      const animationNameValue = Array.isArray(value) ? (value as GriffelAnimation[]) : [value as GriffelAnimation];\n\n      const animationNames: string[] = [];\n      const rtlAnimationNames: string[] = [];\n\n      for (const keyframeObject of animationNameValue) {\n        const keyframeCSS = compileKeyframeRule(keyframeObject);\n        const rtlKeyframeCSS = compileKeyframeRule(convert(keyframeObject));\n\n        const animationName = HASH_PREFIX + hashString(keyframeCSS);\n        let rtlAnimationName: string;\n\n        const keyframeRules = compileKeyframesCSS(animationName, keyframeCSS);\n        let rtlKeyframeRules: string[] = [];\n\n        if (keyframeCSS === rtlKeyframeCSS) {\n          // If CSS for LTR & RTL are same we will re-use animationName from LTR to avoid duplication of rules in output\n          rtlAnimationName = animationName;\n        } else {\n          rtlAnimationName = HASH_PREFIX + hashString(rtlKeyframeCSS);\n          rtlKeyframeRules = compileKeyframesCSS(rtlAnimationName, rtlKeyframeCSS);\n        }\n\n        for (let i = 0; i < keyframeRules.length; i++) {\n          pushToCSSRules(\n            cssRulesByBucket,\n            // keyframes styles should be inserted into own bucket\n            'k',\n            keyframeRules[i],\n            rtlKeyframeRules[i],\n            media,\n          );\n        }\n\n        animationNames.push(animationName);\n        rtlAnimationNames.push(rtlAnimationName);\n      }\n\n      resolveStyleRules(\n        { animationName: animationNames.join(', ') },\n        selectors,\n        media,\n        layer,\n        support,\n        container,\n        cssClassesMap,\n        cssRulesByBucket,\n        rtlAnimationNames.join(', '),\n      );\n    } else if (Array.isArray(value)) {\n      // not animationName property but array in the value => fallback values\n      if (value.length === 0) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            `makeStyles(): An empty array was passed as input to \"${property}\", the property will be omitted in the styles.`,\n          );\n        }\n        continue;\n      }\n\n      const selector = trimSelector(selectors.join(''));\n\n      const key = hashPropertyKey(selector, container, media, support, property);\n      const className = hashClassName({\n        container,\n        media,\n        layer,\n        value: value.map(v => (v ?? '').toString()).join(';'),\n        support,\n        selector,\n        property,\n      });\n\n      const rtlDefinitions = value.map(v => convertProperty(property, v!));\n\n      const rtlPropertyConsistent = !rtlDefinitions.some(v => v.key !== rtlDefinitions[0].key);\n\n      if (!rtlPropertyConsistent) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(\n            'makeStyles(): mixing CSS fallback values which result in multiple CSS properties in RTL is not supported.',\n          );\n        }\n        continue;\n      }\n\n      const flippedInRtl = rtlDefinitions[0].key !== property || rtlDefinitions.some((v, i) => v.value !== value[i]);\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName({\n            container,\n            value: rtlDefinitions.map(v => (v?.value ?? '').toString()).join(';'),\n            property: rtlDefinitions[0].key,\n            selector,\n            layer,\n            media,\n            support,\n          })\n        : undefined;\n\n      const rtlCompileOptions: Partial<CompileAtomicCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinitions[0].key,\n            rtlValue: rtlDefinitions.map(d => d.value) as unknown as Array<string | number>,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(selectors, layer, media, support, container);\n      const [ltrCSS, rtlCSS] = compileAtomicCSSRule({\n        className,\n        media,\n        layer,\n        selectors,\n        property,\n        support,\n        container,\n        value: value as unknown as Array<string | number>,\n        ...rtlCompileOptions,\n      });\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS, media);\n    } else if (isObject(value)) {\n      if (isNestedSelector(property)) {\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors.concat(normalizeNestedProperty(property)),\n          media,\n          layer,\n          support,\n          container,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isMediaQuerySelector(property)) {\n        const combinedMediaQuery = generateCombinedQuery(media, property.slice(6).trim());\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors,\n          combinedMediaQuery,\n          layer,\n          support,\n          container,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isLayerSelector(property)) {\n        const combinedLayerQuery = (layer ? `${layer}.` : '') + property.slice(6).trim();\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors,\n          media,\n          combinedLayerQuery,\n          support,\n          container,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isSupportQuerySelector(property)) {\n        const combinedSupportQuery = generateCombinedQuery(support, property.slice(9).trim());\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors,\n          media,\n          layer,\n          combinedSupportQuery,\n          container,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isContainerQuerySelector(property)) {\n        // TODO implement nested container queries if needed\n        // The only way to target multiple containers is to nest container queries\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/@container#nested_container_queries\n        const containerQuery = property.slice(10).trim();\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors,\n          media,\n          layer,\n          support,\n          containerQuery,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else {\n        warnAboutUnresolvedRule(property, value);\n      }\n    }\n  }\n\n  return [cssClassesMap, cssRulesByBucket];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAwBA,SAASA,gBAAgBA,CACvBC,UAAyB,EACzBC,WAAmB,EACnBC,YAAoB,EACpBC,YAAgC,EAChC;EACAH,UAAU,CAACC,WAAW,CAAC,GAAGE,YAAY,GAAG,CAACD,YAAY,EAAGC,YAAY,CAAC,GAAGD,YAAY;AACvF;AAEA,SAASE,iBAAiBA,CAACC,OAAe,EAAEC,QAA6C,EAAkB;EACzG,IAAIA,QAAQ,EAAE;IACZ,OAAO,CAACD,OAAO,EAAEC,QAAQ,CAAC;EAC5B;EAEA,OAAOD,OAAO;AAChB;AAEA,SAASE,cAAcA,CACrBC,gBAAkC,EAClCC,eAAgC,EAChCC,MAA0B,EAC1BC,MAA0B,EAC1BC,KAAyB,EACzB;EAAA,IAAAC,qBAAA;EACA,IAAIP,QAA6C;EACjD,IAAIG,eAAe,KAAK,GAAG,IAAIG,KAAK,EAAE;IACpCN,QAAQ,GAAG;MAAEQ,CAAC,EAAEF;KAAO;EACzB;EAEA,CAAAC,qBAAA,GAAAL,gBAAgB,CAACC,eAAe,CAAC,YAAAI,qBAAA,GAAjCL,gBAAgB,CAACC,eAAe,CAAC,GAAK,EAAE;EAExC,IAAIC,MAAM,EAAE;IACVF,gBAAgB,CAACC,eAAe,CAAC,CAAEM,IAAI,CAACX,iBAAiB,CAACM,MAAM,EAAEJ,QAAQ,CAAC,CAAC;EAC9E;EAEA,IAAIK,MAAM,EAAE;IACVH,gBAAgB,CAACC,eAAe,CAAC,CAAEM,IAAI,CAACX,iBAAiB,CAACO,MAAM,EAAEL,QAAQ,CAAC,CAAC;EAC9E;AACF;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASU,iBAAiBA,CAC/BC,MAAoB,EACpBC,SAAmB,GAAG,EAAE,EACxBN,KAAK,GAAG,EAAE,EACVO,KAAK,GAAG,EAAE,EACVC,OAAO,GAAG,EAAE,EACZC,SAAS,GAAG,EAAE,EACdC,aAA4B,GAAG,EAAE,EACjCd,gBAAkC,GAAG,EAAE,EACvCe,QAAiB,EACkB;EACnC;EACA,KAAK,MAAMC,QAAQ,IAAIP,MAAM,EAAE;IAC7B;IACA,IAAIQ,0BAA0B,CAACC,cAAc,CAACF,QAAQ,CAAC,EAAE;MACvDG,8BAA8B,CAACH,QAAQ,EAAEP,MAAM,CAACO,QAAQ,CAAuB,CAAC;MAChF;IACF;IAEA,MAAMI,KAAK,GAAGX,MAAM,CAACO,QAAQ,CAAuB;;IAEpD;IACA,IAAII,KAAK,IAAI,IAAI,EAAE;MACjB;IACF;IAEA,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC1D,MAAMC,QAAQ,GAAGC,YAAY,CAACZ,SAAS,CAACa,IAAI,CAAC,EAAE,CAAC,CAAC;;MAEjD;MACA,MAAMC,GAAG,GAAGC,eAAe,CAACJ,QAAQ,EAAER,SAAS,EAAET,KAAK,EAAEQ,OAAO,EAAEI,QAAQ,CAAC;MAC1E,MAAMU,SAAS,GAAGC,aAAa,CAAC;QAC9Bd,SAAS;QACTT,KAAK;QACLO,KAAK;QACLS,KAAK,EAAEA,KAAK,CAACQ,QAAQ,EAAE;QACvBhB,OAAO;QACPS,QAAQ;QACRL;MACF,CAAC,CAAC;MAEF,MAAMa,aAAa,GAAId,QAAQ,IAAI;QAAES,GAAG,EAAER,QAAQ;QAAEI,KAAK,EAAEL;MAAS,CAAC,IAAKe,eAAe,CAACd,QAAQ,EAAEI,KAAK,CAAC;MAC1G,MAAMW,YAAY,GAAGF,aAAa,CAACL,GAAG,KAAKR,QAAQ,IAAIa,aAAa,CAACT,KAAK,KAAKA,KAAK;MAEpF,MAAMY,YAAY,GAAGD,YAAY,GAC7BJ,aAAa,CAAC;QACZd,SAAS;QACTO,KAAK,EAAES,aAAa,CAACT,KAAK,CAACQ,QAAQ,EAAE;QACrCZ,QAAQ,EAAEa,aAAa,CAACL,GAAG;QAC3BH,QAAQ;QACRjB,KAAK;QACLO,KAAK;QACLC;OACD,CAAC,GACFqB,SAAS;MACb,MAAMC,iBAA+D,GAAGH,YAAY,GAChF;QACEC,YAAY;QACZG,WAAW,EAAEN,aAAa,CAACL,GAAG;QAC9BT,QAAQ,EAAEc,aAAa,CAACT;MAC1B,CAAC,GACDa,SAAS;MAEb,MAAMhC,eAAe,GAAGmC,kBAAkB,CAAC1B,SAAS,EAAEC,KAAK,EAAEP,KAAK,EAAEQ,OAAO,EAAEC,SAAS,CAAC;MACvF,MAAM,CAACX,MAAM,EAAEC,MAAM,CAAC,GAAGkC,oBAAoB,CAAAC,MAAA,CAAAC,MAAA;QAC3Cb,SAAS;QACTtB,KAAK;QACLO,KAAK;QACLD,SAAS;QACTM,QAAQ;QACRJ,OAAO;QACPC,SAAS;QACTO;OACG,EAAAc,iBAAiB,CACrB,CAAC;MAEF3C,gBAAgB,CAACuB,aAAa,EAAEU,GAAG,EAAEE,SAAS,EAAEM,YAAY,CAAC;MAC7DjC,cAAc,CAACC,gBAAgB,EAAEC,eAAe,EAAEC,MAAM,EAAEC,MAAM,EAAEC,KAAK,CAAC;IAC1E,CAAC,MAAM,IAAIY,QAAQ,KAAK,eAAe,EAAE;MACvC,MAAMwB,kBAAkB,GAAGC,KAAK,CAACC,OAAO,CAACtB,KAAK,CAAC,GAAIA,KAAK,GAA0B,CAACA,KAAK,CAAqB;MAE7G,MAAMuB,cAAwB,GAAG,EAAE;MACnC,MAAMC,iBAA2B,GAAG,EAAE;MAEtC,KAAK,MAAMC,cAAc,IAAIL,kBAAkB,EAAE;QAC/C,MAAMM,WAAW,GAAGC,mBAAmB,CAACF,cAAc,CAAC;QACvD,MAAMG,cAAc,GAAGD,mBAAmB,CAACE,OAAO,CAACJ,cAAc,CAAC,CAAC;QAEnE,MAAMK,aAAa,GAAGC,WAAW,GAAGC,UAAU,CAACN,WAAW,CAAC;QAC3D,IAAIO,gBAAwB;QAE5B,MAAMC,aAAa,GAAGC,mBAAmB,CAACL,aAAa,EAAEJ,WAAW,CAAC;QACrE,IAAIU,gBAA0B,GAAG,EAAE;QAEnC,IAAIV,WAAW,KAAKE,cAAc,EAAE;UAClC;UACAK,gBAAgB,GAAGH,aAAa;QAClC,CAAC,MAAM;UACLG,gBAAgB,GAAGF,WAAW,GAAGC,UAAU,CAACJ,cAAc,CAAC;UAC3DQ,gBAAgB,GAAGD,mBAAmB,CAACF,gBAAgB,EAAEL,cAAc,CAAC;QAC1E;QAEA,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,aAAa,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;UAC7C1D,cAAc,CACZC,gBAAgB;UAChB;UACA,GAAG,EACHsD,aAAa,CAACG,CAAC,CAAC,EAChBD,gBAAgB,CAACC,CAAC,CAAC,EACnBrD,KACF,CAAC;QACH;QAEAuC,cAAc,CAACpC,IAAI,CAAC2C,aAAa,CAAC;QAClCN,iBAAiB,CAACrC,IAAI,CAAC8C,gBAAgB,CAAC;MAC1C;MAEA7C,iBAAiB,CACf;QAAE0C,aAAa,EAAEP,cAAc,CAACpB,IAAI,CAAC,IAAI;OAAG,EAC5Cb,SAAS,EACTN,KAAK,EACLO,KAAK,EACLC,OAAO,EACPC,SAAS,EACTC,aAAa,EACbd,gBAAgB,EAChB4C,iBAAiB,CAACrB,IAAI,CAAC,IAAI,CAC7B,CAAC;KACF,MAAM,IAAIkB,KAAK,CAACC,OAAO,CAACtB,KAAK,CAAC,EAAE;MAC/B;MACA,IAAIA,KAAK,CAACsC,MAAM,KAAK,CAAC,EAAE;QACtB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;UACzCC,OAAO,CAACC,IAAI,CAC8C,wDAAA/C,QAAS,gDACnE,CAAC;QACH;QACA;MACF;MAEA,MAAMK,QAAQ,GAAGC,YAAY,CAACZ,SAAS,CAACa,IAAI,CAAC,EAAE,CAAC,CAAC;MAEjD,MAAMC,GAAG,GAAGC,eAAe,CAACJ,QAAQ,EAAER,SAAS,EAAET,KAAK,EAAEQ,OAAO,EAAEI,QAAQ,CAAC;MAC1E,MAAMU,SAAS,GAAGC,aAAa,CAAC;QAC9Bd,SAAS;QACTT,KAAK;QACLO,KAAK;QACLS,KAAK,EAAEA,KAAK,CAAC4C,GAAG,CAACC,CAAC,IAAI,CAACA,CAAC,IAAD,OAAAA,CAAC,GAAI,EAAE,EAAErC,QAAQ,EAAE,CAAC,CAACL,IAAI,CAAC,GAAG,CAAC;QACrDX,OAAO;QACPS,QAAQ;QACRL;MACF,CAAC,CAAC;MAEF,MAAMkD,cAAc,GAAG9C,KAAK,CAAC4C,GAAG,CAACC,CAAC,IAAInC,eAAe,CAACd,QAAQ,EAAEiD,CAAE,CAAC,CAAC;MAEpE,MAAME,qBAAqB,GAAG,CAACD,cAAc,CAACE,IAAI,CAACH,CAAC,IAAIA,CAAC,CAACzC,GAAG,KAAK0C,cAAc,CAAC,CAAC,CAAC,CAAC1C,GAAG,CAAC;MAExF,IAAI,CAAC2C,qBAAqB,EAAE;QAC1B,IAAIR,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;UACzCC,OAAO,CAACO,KAAK,CACX,2GACF,CAAC;QACH;QACA;MACF;MAEA,MAAMtC,YAAY,GAAGmC,cAAc,CAAC,CAAC,CAAC,CAAC1C,GAAG,KAAKR,QAAQ,IAAIkD,cAAc,CAACE,IAAI,CAAC,CAACH,CAAC,EAAER,CAAC,KAAKQ,CAAC,CAAC7C,KAAK,KAAKA,KAAK,CAACqC,CAAC,CAAC,CAAC;MAE9G,MAAMzB,YAAY,GAAGD,YAAY,GAC7BJ,aAAa,CAAC;QACZd,SAAS;QACTO,KAAK,EAAE8C,cAAc,CAACF,GAAG,CAACC,CAAC;UAAA,IAAAK,QAAA;UAAA,OAAI,EAAAA,QAAA,GAACL,CAAC,oBAADA,CAAC,CAAE7C,KAAK,YAAAkD,QAAA,GAAI,EAAE,EAAE1C,QAAQ,EAAE;QAAA,EAAC,CAACL,IAAI,CAAC,GAAG,CAAC;QACrEP,QAAQ,EAAEkD,cAAc,CAAC,CAAC,CAAC,CAAC1C,GAAG;QAC/BH,QAAQ;QACRV,KAAK;QACLP,KAAK;QACLQ;OACD,CAAC,GACFqB,SAAS;MAEb,MAAMC,iBAA+D,GAAGH,YAAY,GAChF;QACEC,YAAY;QACZG,WAAW,EAAE+B,cAAc,CAAC,CAAC,CAAC,CAAC1C,GAAG;QAClCT,QAAQ,EAAEmD,cAAc,CAACF,GAAG,CAACO,CAAC,IAAIA,CAAC,CAACnD,KAAK;MAC3C,CAAC,GACDa,SAAS;MAEb,MAAMhC,eAAe,GAAGmC,kBAAkB,CAAC1B,SAAS,EAAEC,KAAK,EAAEP,KAAK,EAAEQ,OAAO,EAAEC,SAAS,CAAC;MACvF,MAAM,CAACX,MAAM,EAAEC,MAAM,CAAC,GAAGkC,oBAAoB,CAAAC,MAAA,CAAAC,MAAA;QAC3Cb,SAAS;QACTtB,KAAK;QACLO,KAAK;QACLD,SAAS;QACTM,QAAQ;QACRJ,OAAO;QACPC,SAAS;QACTO,KAAK,EAAEA;OACJ,EAAAc,iBAAiB,CACrB,CAAC;MAEF3C,gBAAgB,CAACuB,aAAa,EAAEU,GAAG,EAAEE,SAAS,EAAEM,YAAY,CAAC;MAC7DjC,cAAc,CAACC,gBAAgB,EAAEC,eAAe,EAAEC,MAAM,EAAEC,MAAM,EAAEC,KAAK,CAAC;IAC1E,CAAC,MAAM,IAAIoE,QAAQ,CAACpD,KAAK,CAAC,EAAE;MAC1B,IAAIqD,gBAAgB,CAACzD,QAAQ,CAAC,EAAE;QAC9BR,iBAAiB,CACfY,KAAK,EACLV,SAAS,CAACgE,MAAM,CAACC,uBAAuB,CAAC3D,QAAQ,CAAC,CAAC,EACnDZ,KAAK,EACLO,KAAK,EACLC,OAAO,EACPC,SAAS,EACTC,aAAa,EACbd,gBACF,CAAC;MACH,CAAC,MAAM,IAAI4E,oBAAoB,CAAC5D,QAAQ,CAAC,EAAE;QACzC,MAAM6D,kBAAkB,GAAGC,qBAAqB,CAAC1E,KAAK,EAAEY,QAAQ,CAAC+D,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAAE,CAAC;QAEjFxE,iBAAiB,CACfY,KAAK,EACLV,SAAS,EACTmE,kBAAkB,EAClBlE,KAAK,EACLC,OAAO,EACPC,SAAS,EACTC,aAAa,EACbd,gBACF,CAAC;MACH,CAAC,MAAM,IAAIiF,eAAe,CAACjE,QAAQ,CAAC,EAAE;QACpC,MAAMkE,kBAAkB,GAAG,CAACvE,KAAK,GAAM,GAAAA,KAAM,GAAE,GAAG,EAAE,IAAIK,QAAQ,CAAC+D,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAAE;QAEhFxE,iBAAiB,CACfY,KAAK,EACLV,SAAS,EACTN,KAAK,EACL8E,kBAAkB,EAClBtE,OAAO,EACPC,SAAS,EACTC,aAAa,EACbd,gBACF,CAAC;MACH,CAAC,MAAM,IAAImF,sBAAsB,CAACnE,QAAQ,CAAC,EAAE;QAC3C,MAAMoE,oBAAoB,GAAGN,qBAAqB,CAAClE,OAAO,EAAEI,QAAQ,CAAC+D,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAAE,CAAC;QAErFxE,iBAAiB,CACfY,KAAK,EACLV,SAAS,EACTN,KAAK,EACLO,KAAK,EACLyE,oBAAoB,EACpBvE,SAAS,EACTC,aAAa,EACbd,gBACF,CAAC;MACH,CAAC,MAAM,IAAIqF,wBAAwB,CAACrE,QAAQ,CAAC,EAAE;QAC7C;QACA;QACA;QACA,MAAMsE,cAAc,GAAGtE,QAAQ,CAAC+D,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,EAAE;QAEhDxE,iBAAiB,CACfY,KAAK,EACLV,SAAS,EACTN,KAAK,EACLO,KAAK,EACLC,OAAO,EACP0E,cAAc,EACdxE,aAAa,EACbd,gBACF,CAAC;MACH,CAAC,MAAM;QACLuF,uBAAuB,CAACvE,QAAQ,EAAEI,KAAK,CAAC;MAC1C;IACF;EACF;EAEA,OAAO,CAACN,aAAa,EAAEd,gBAAgB,CAAC;AAC1C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}