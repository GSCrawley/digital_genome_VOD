{"ast":null,"code":"var _jsxFileName = \"/Users/gideoncrawley/Projects/Lookeeloo/src/components/LKUIVideoPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport LKUITransparentButton from './LKUITransparentButton';\nimport srtParser2 from 'srt-parser-2';\nimport { Play24Filled, Pause24Filled, FullScreenMaximize24Filled, SpeakerMute24Filled, Speaker224Filled, SkipBack1024Filled, SkipForward1024Filled, ClosedCaptionOff24Filled, ClosedCaption24Filled } from '@fluentui/react-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet timeout;\nfunction LKUIVideoPlayer(api) {\n  _s();\n  var _VideoElement$current;\n  const [isPaused, setIsPaused] = useState(true);\n  const [isMuted, setIsMuted] = useState(false);\n  const [captionsIsHidden, setCaptionsVisibility] = useState(false);\n  const [seekValue, setSeekValue] = useState(0);\n  const [showMetadata, setShowMetadata] = useState(false);\n  const [isRippleClicked, setRippleClicked] = useState(false); // Add this line\n  const currentTimeRef = useRef(0);\n  const [captions, setCaptions] = useState([]);\n  const VideoElement = useRef(null);\n  const TimeDisplayElement = useRef(null);\n  const CaptionsContainer = useRef(null);\n  const ProgressBar = useRef(null);\n  const ControlBar = useRef(null);\n  const Player = useRef(null);\n  const Spinner = useRef(null);\n  const SeekerElement = useRef(null);\n  const TitleOnFS = useRef(null);\n  const PlayElement = isPaused ? Play24Filled : Pause24Filled;\n  const SpeakerElement = isMuted ? SpeakerMute24Filled : Speaker224Filled;\n  const CaptionsElement = captionsIsHidden ? ClosedCaptionOff24Filled : ClosedCaption24Filled;\n  const handleBuffering = () => {\n    Spinner.current.style.display = 'flex';\n  };\n  const handlePlaying = () => {\n    Spinner.current.style.display = 'none';\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    const formattedMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`;\n    const formattedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\n    return `${formattedMinutes}:${formattedSeconds}`;\n  };\n  useEffect(() => {\n    const videoCurrent = VideoElement.current;\n    if (Player.current) {\n      const playerContainer = Player.current;\n      if (api.height != null) {\n        const playerHeight = playerContainer.offsetHeight;\n        const playerWidth = playerHeight * (videoCurrent.width / videoCurrent.height);\n        playerContainer.style.width = `${playerWidth}px`;\n      } else if (api.width != null) {\n        const playerWidth = playerContainer.offsetWidth;\n        const playerHeight = playerWidth * (videoCurrent.height / videoCurrent.width);\n        playerContainer.style.height = `${playerHeight}px`;\n      }\n    }\n  }, []);\n  useEffect(() => {\n    var refreshInt;\n    const videoCurrent = VideoElement.current;\n    if (videoCurrent) {\n      videoCurrent.autoplay = false;\n      videoCurrent.addEventListener('loadeddata', () => {\n        const duration = videoCurrent.duration;\n        if (TimeDisplayElement.current) {\n          TimeDisplayElement.current.innerText = `00:00 / ${formatTime(duration)}`;\n        }\n        setIsPaused(true);\n      });\n      videoCurrent.addEventListener('timeupdate', () => {\n        const currentTime = videoCurrent.currentTime;\n        const duration = videoCurrent.duration;\n        if (ProgressBar.current) {\n          ProgressBar.current.value = currentTime / duration * 100;\n        }\n        if (SeekerElement.current) {\n          SeekerElement.current.value = Math.floor(currentTime).toString();\n        }\n        if (TimeDisplayElement.current) {\n          TimeDisplayElement.current.innerText = `${formatTime(currentTime)} / ${formatTime(duration)}`;\n        }\n        currentTimeRef.current = currentTime;\n      });\n      videoCurrent.addEventListener('play', () => {\n        setIsPaused(false);\n      });\n      videoCurrent.addEventListener('pause', () => {\n        setIsPaused(true);\n      });\n      return () => {\n        if (videoCurrent) {\n          videoCurrent.removeEventListener('loadeddata', () => {});\n          videoCurrent.removeEventListener('timeupdate', () => {});\n        }\n      };\n    }\n  }, []);\n  const parseSRT = srtData => {\n    const srtParser = new srtParser2();\n    const parsedData = srtParser.fromSrt(srtData);\n    return parsedData.map(subtitle => ({\n      start: subtitle.startSeconds,\n      end: subtitle.endSeconds,\n      text: subtitle.text\n    }));\n  };\n  useEffect(() => {\n    if (api.captionsPath) {\n      fetch(api.captionsPath).then(response => response.text()).then(srtData => {\n        const parsedCaptions = parseSRT(srtData);\n        setCaptions(parsedCaptions);\n      }).catch(error => {\n        console.error('Error loading captions:', error);\n      });\n    }\n  }, [api.captionsPath]);\n  useEffect(() => {\n    const captionsContainer = CaptionsContainer.current;\n    if (captionsContainer) {\n      const updateCaptionsDisplay = () => {\n        const currentCaption = captions.find(caption => currentTimeRef.current >= caption.start && currentTimeRef.current <= caption.end);\n        // Enable custom styled subtitles\n        captionsContainer.innerHTML = currentCaption ? currentCaption.text : '';\n      };\n      updateCaptionsDisplay(); // Initial display\n\n      const intervalId = setInterval(updateCaptionsDisplay, 0.01); // Update every 0.01ms\n\n      return () => {\n        clearInterval(intervalId);\n      };\n    }\n  }, [captions]);\n  useEffect(() => {\n    let metadataTimeout;\n    if (isPaused && currentTimeRef.current > 0) {\n      metadataTimeout = setTimeout(() => {\n        setShowMetadata(true);\n        ControlBar.current.style.display = 'none';\n      }, 5000);\n    } else {\n      setShowMetadata(false);\n      ControlBar.current.style.display = 'flex';\n    }\n    return () => {\n      clearTimeout(metadataTimeout);\n    };\n  }, [isPaused, currentTimeRef.current]);\n  const SEEK_BUFFER = 0.1;\n  function handleSeek(e) {\n    const seekTime = parseFloat(e.target.value);\n    const roundedSeekTime = Math.round(seekTime * 100) / 100;\n    setSeekValue(roundedSeekTime);\n  }\n  function handleSeekEnd() {\n    const videoCurrent = VideoElement.current;\n    if (videoCurrent) {\n      videoCurrent.currentTime = seekValue;\n      setTimeout(() => {\n        if (Math.abs(videoCurrent.currentTime - seekValue) <= SEEK_BUFFER) {\n          videoCurrent.removeEventListener('timeupdate', () => {});\n        }\n      }, 500);\n    }\n  }\n  function handlePlayPause() {\n    const videoCurrent = VideoElement.current;\n    if ((videoCurrent === null || videoCurrent === void 0 ? void 0 : videoCurrent.paused) === false) {\n      videoCurrent === null || videoCurrent === void 0 ? void 0 : videoCurrent.pause();\n      setIsPaused(true);\n    } else {\n      // Add the 'clicked' class to initiate the ripple effect\n      setRippleClicked(true);\n      videoCurrent === null || videoCurrent === void 0 ? void 0 : videoCurrent.play().then(() => {\n        setIsPaused(false);\n      }).catch(error => {\n        console.error('Error playing video:', error);\n      });\n\n      // Remove the 'clicked' class after a short delay (adjust as needed)\n      setTimeout(() => {\n        setRippleClicked(false);\n      }, 500);\n    }\n  }\n  function handleMute() {\n    const videoCurrent = VideoElement.current;\n    if (videoCurrent && videoCurrent.muted === true) {\n      videoCurrent.muted = false;\n      setIsMuted(false);\n    } else if (videoCurrent) {\n      videoCurrent.muted = true;\n      setIsMuted(true);\n    }\n  }\n  function handleFullScreen() {\n    const playerControls = ControlBar.current;\n    if (document.fullscreenElement) {\n      var _Player$current;\n      document.exitFullscreen();\n      (_Player$current = Player.current) === null || _Player$current === void 0 ? void 0 : _Player$current.classList.remove('lkui-fullscreen');\n      playerControls.style.display = 'flex';\n      TitleOnFS.current.style.display = 'none';\n    } else {\n      var _Player$current2, _Player$current3;\n      playerControls.style.display = 'none';\n      (_Player$current2 = Player.current) === null || _Player$current2 === void 0 ? void 0 : _Player$current2.requestFullscreen();\n      handleMouseMove();\n      (_Player$current3 = Player.current) === null || _Player$current3 === void 0 ? void 0 : _Player$current3.classList.add('lkui-fullscreen');\n    }\n  }\n  if (api.width === 0 || api.width === null) {\n    api.width = 800;\n  }\n  function handleMouseMove() {\n    const playerControls = ControlBar.current;\n    if (document.fullscreenElement) {\n      if (playerControls) {\n        VideoElement.current.style.cursor = 'default';\n        playerControls.style.display = 'flex';\n        TitleOnFS.current.style.display = 'block';\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {\n          if (playerControls) {\n            VideoElement.current.style.cursor = 'none';\n            playerControls.style.display = 'none';\n            TitleOnFS.current.style.display = 'none';\n          }\n        }, 4000);\n      }\n    } else {\n      if (playerControls) {\n        TitleOnFS.current.style.display = 'none';\n        VideoElement.current.style.cursor = 'default';\n        playerControls.style.display = 'flex';\n      }\n      clearTimeout(timeout);\n    }\n  }\n  let QuickSeekDirection = /*#__PURE__*/function (QuickSeekDirection) {\n    QuickSeekDirection[QuickSeekDirection[\"Back10\"] = 0] = \"Back10\";\n    QuickSeekDirection[QuickSeekDirection[\"Forward10\"] = 1] = \"Forward10\";\n    return QuickSeekDirection;\n  }({});\n  function DesktopOnlyStuff() {\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n      return null;\n    }\n\n    // Return something for the non-mobile case\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"\\u2022\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lkui-video-player-timecode-information\",\n        children: api.videoName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  function handleQuickSeek(direction) {\n    if (VideoElement.current) {\n      const currentTime = VideoElement.current.currentTime;\n      if (currentTime !== undefined) {\n        switch (direction) {\n          case QuickSeekDirection.Back10:\n            VideoElement.current.currentTime = currentTime - 10;\n            break;\n          case QuickSeekDirection.Forward10:\n            VideoElement.current.currentTime = currentTime + 10;\n            break;\n        }\n      }\n    }\n  }\n  function toggleCaptions() {\n    if (CaptionsContainer.current) {\n      if (captionsIsHidden === false) {\n        CaptionsContainer.current.style.display = 'none';\n        setCaptionsVisibility(true);\n      } else {\n        CaptionsContainer.current.style.display = 'block';\n        setCaptionsVisibility(false);\n      }\n    }\n  }\n  document.onkeydown = function (e) {\n    handleMouseMove();\n    e.preventDefault();\n    if (e.key === 'p' || e.key === ' ') {\n      handlePlayPause();\n    } else if (e.key === 'm') {\n      handleMute();\n    } else if (e.key === 'ArrowLeft') {\n      handleQuickSeek(QuickSeekDirection.Back10);\n    } else if (e.key === 'ArrowRight') {\n      handleQuickSeek(QuickSeekDirection.Forward10);\n    } else if (e.key === 'f') {\n      handleFullScreen();\n    } else if (e.key === 'Escape') {\n      // Also handle when Esc is pressed\n      e.preventDefault();\n      if (document.fullscreenElement) {\n        var _Player$current4;\n        const playerControls = ControlBar.current;\n        document.exitFullscreen();\n        (_Player$current4 = Player.current) === null || _Player$current4 === void 0 ? void 0 : _Player$current4.classList.remove('lkui-fullscreen');\n        playerControls.style.display = 'flex';\n      }\n    } else if (e.key === 'c') {\n      toggleCaptions();\n    }\n  };\n  const metadataDisplay = showMetadata && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lkui-video-player-idle\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lkui-video-player-idle-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You're watching:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: api.videoName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 375,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lkui-video-player\",\n    ref: Player,\n    style: {\n      width: api.width,\n      height: api.height\n    },\n    onMouseMove: handleMouseMove,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lkui-video-player-containers\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lkui-video-player-fullscreen-title\",\n        ref: TitleOnFS,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: api.videoName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), metadataDisplay, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lkui-video-captions\",\n        ref: CaptionsContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lkui-video-player-controls\",\n        ref: ControlBar,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lkui-video-player-seekbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n            ref: ProgressBar,\n            className: \"lkui-video-progress\",\n            max: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            ref: SeekerElement,\n            className: \"lkui-video-player-seeker\",\n            value: seekValue,\n            min: 0,\n            max: ((_VideoElement$current = VideoElement.current) === null || _VideoElement$current === void 0 ? void 0 : _VideoElement$current.duration) || 1 || 0,\n            step: 0.000001,\n            onChange: handleSeek,\n            onInput: handleSeek,\n            onMouseUp: handleSeekEnd,\n            onTouchEnd: handleSeekEnd\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lkui-video-player-button-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lkui-video-player-controls-left\",\n            children: [/*#__PURE__*/_jsxDEV(LKUITransparentButton, {\n              className: \"lkui-play-button\",\n              regComponent: PlayElement,\n              onClick: handlePlayPause,\n              title: \"Play (p)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LKUITransparentButton, {\n              className: \"lkui-quick-seek-left\",\n              regComponent: SkipBack1024Filled,\n              onClick: () => handleQuickSeek(QuickSeekDirection.Back10),\n              title: \"Rewind 10 (<-)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LKUITransparentButton, {\n              className: \"lkui-quick-seek-right\",\n              regComponent: SkipForward1024Filled,\n              onClick: () => handleQuickSeek(QuickSeekDirection.Forward10),\n              title: \"Forward 10 (->)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LKUITransparentButton, {\n              className: \"lkui-mute-button\",\n              regComponent: SpeakerElement,\n              onClick: handleMute,\n              title: \"Mute (m)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lkui-video-player-timecode\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lkui-video-player-timecode-primary\",\n                ref: TimeDisplayElement,\n                children: \"00:00 / 00:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DesktopOnlyStuff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lkui-video-player-controls-right\",\n            children: [/*#__PURE__*/_jsxDEV(LKUITransparentButton, {\n              className: \"lkui-captions-button\",\n              regComponent: CaptionsElement,\n              onClick: toggleCaptions,\n              title: \"Toggle captions (c)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LKUITransparentButton, {\n              regComponent: FullScreenMaximize24Filled,\n              onClick: handleFullScreen,\n              title: \"Fullscreen (f)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lkui-spinner-container\",\n      ref: Spinner,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lkui-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      controls: false,\n      className: \"lkui-video-element\",\n      ref: VideoElement,\n      src: api.videoPath,\n      playsInline: true,\n      autoPlay: true,\n      onWaiting: handleBuffering,\n      onPlaying: handlePlaying,\n      onClick: () => {\n        handleMouseMove();\n        handlePlayPause();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 384,\n    columnNumber: 5\n  }, this);\n}\n_s(LKUIVideoPlayer, \"kkY0bZnEIw2xuuvgrpCovot0JkU=\");\n_c = LKUIVideoPlayer;\nexport default LKUIVideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"LKUIVideoPlayer\");","map":{"version":3,"names":["React","useRef","useState","useEffect","LKUITransparentButton","srtParser2","Play24Filled","Pause24Filled","FullScreenMaximize24Filled","SpeakerMute24Filled","Speaker224Filled","SkipBack1024Filled","SkipForward1024Filled","ClosedCaptionOff24Filled","ClosedCaption24Filled","jsxDEV","_jsxDEV","Fragment","_Fragment","timeout","LKUIVideoPlayer","api","_s","_VideoElement$current","isPaused","setIsPaused","isMuted","setIsMuted","captionsIsHidden","setCaptionsVisibility","seekValue","setSeekValue","showMetadata","setShowMetadata","isRippleClicked","setRippleClicked","currentTimeRef","captions","setCaptions","VideoElement","TimeDisplayElement","CaptionsContainer","ProgressBar","ControlBar","Player","Spinner","SeekerElement","TitleOnFS","PlayElement","SpeakerElement","CaptionsElement","handleBuffering","current","style","display","handlePlaying","formatTime","time","minutes","Math","floor","seconds","formattedMinutes","formattedSeconds","videoCurrent","playerContainer","height","playerHeight","offsetHeight","playerWidth","width","offsetWidth","refreshInt","autoplay","addEventListener","duration","innerText","currentTime","value","toString","removeEventListener","parseSRT","srtData","srtParser","parsedData","fromSrt","map","subtitle","start","startSeconds","end","endSeconds","text","captionsPath","fetch","then","response","parsedCaptions","catch","error","console","captionsContainer","updateCaptionsDisplay","currentCaption","find","caption","innerHTML","intervalId","setInterval","clearInterval","metadataTimeout","setTimeout","clearTimeout","SEEK_BUFFER","handleSeek","e","seekTime","parseFloat","target","roundedSeekTime","round","handleSeekEnd","abs","handlePlayPause","paused","pause","play","handleMute","muted","handleFullScreen","playerControls","document","fullscreenElement","_Player$current","exitFullscreen","classList","remove","_Player$current2","_Player$current3","requestFullscreen","handleMouseMove","add","cursor","QuickSeekDirection","DesktopOnlyStuff","test","navigator","userAgent","children","className","videoName","fileName","_jsxFileName","lineNumber","columnNumber","handleQuickSeek","direction","undefined","Back10","Forward10","toggleCaptions","onkeydown","preventDefault","key","_Player$current4","metadataDisplay","ref","onMouseMove","max","type","min","step","onChange","onInput","onMouseUp","onTouchEnd","regComponent","onClick","title","controls","src","videoPath","playsInline","autoPlay","onWaiting","onPlaying","_c","$RefreshReg$"],"sources":["/Users/gideoncrawley/Projects/Lookeeloo/src/components/LKUIVideoPlayer.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport LKUITransparentButton from './LKUITransparentButton';\nimport srtParser2 from 'srt-parser-2';\nimport {\n  Play24Filled,\n  Pause24Filled,\n  FullScreenMaximize24Filled,\n  SpeakerMute24Filled,\n  Speaker224Filled,\n  SkipBack1024Filled,\n  SkipForward1024Filled,\n  ClosedCaptionOff24Filled,\n  ClosedCaption24Filled,\n} from '@fluentui/react-icons';\n\ninterface VideoPlayerAPI {\n  videoPath: string;\n  captionsPath?: string;\n  videoName: string;\n  width?: number;\n  height?: number;\n}\n\ninterface Subtitle {\n  start: number;\n  end: number;\n  text: string;\n}\n\nlet timeout: any;\n\nfunction LKUIVideoPlayer(api: VideoPlayerAPI) {\n  const [isPaused, setIsPaused] = useState<boolean>(true);\n  const [isMuted, setIsMuted] = useState<boolean>(false);\n  const [captionsIsHidden, setCaptionsVisibility] = useState<boolean>(false)\n  const [seekValue, setSeekValue] = useState<number>(0);\n  const [showMetadata, setShowMetadata] = useState<boolean>(false);\n  const [isRippleClicked, setRippleClicked] = useState<boolean>(false); // Add this line\n  const currentTimeRef = useRef<number>(0);\n  const [captions, setCaptions] = useState<Subtitle[]>([]);\n  const VideoElement = useRef<HTMLVideoElement>(null);\n  const TimeDisplayElement = useRef<HTMLParagraphElement>(null);\n  const CaptionsContainer = useRef<HTMLDivElement>(null);\n  const ProgressBar = useRef<HTMLProgressElement>(null);\n  const ControlBar = useRef<HTMLDivElement>(null);\n  const Player = useRef<HTMLDivElement>(null);\n  const Spinner = useRef<HTMLDivElement>(null);\n  const SeekerElement = useRef<HTMLInputElement & { isSeeking?: boolean }>(null);\n  const TitleOnFS = useRef<HTMLDivElement>(null);\n  const PlayElement = isPaused ? Play24Filled : Pause24Filled;\n  const SpeakerElement = isMuted ? SpeakerMute24Filled : Speaker224Filled;\n  const CaptionsElement = captionsIsHidden ? ClosedCaptionOff24Filled: ClosedCaption24Filled;\n\n  const handleBuffering = () => {\n    Spinner.current!.style.display = 'flex';\n  };\n\n  const handlePlaying = () => {\n    Spinner.current!.style.display = 'none';\n  };\n  const formatTime = (time: number): string => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    const formattedMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`;\n    const formattedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\n    return `${formattedMinutes}:${formattedSeconds}`;\n  };\n\n  useEffect(() => {\n    const videoCurrent = VideoElement.current!;\n\n    if (Player.current) {\n      const playerContainer = Player.current;\n\n      if (api.height != null) {\n        const playerHeight = playerContainer.offsetHeight;\n        const playerWidth = playerHeight * (videoCurrent.width / videoCurrent.height);\n        playerContainer.style.width = `${playerWidth}px`;\n      } else if (api.width != null) {\n        const playerWidth = playerContainer.offsetWidth;\n        const playerHeight = playerWidth * (videoCurrent.height / videoCurrent.width);\n        playerContainer.style.height = `${playerHeight}px`;\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    var refreshInt: any;\n    const videoCurrent = VideoElement.current!;\n    if (videoCurrent) {\n      videoCurrent.autoplay = false;\n\n      videoCurrent.addEventListener('loadeddata', () => {\n        const duration = videoCurrent.duration;\n        if (TimeDisplayElement.current) {\n          TimeDisplayElement.current.innerText = `00:00 / ${formatTime(duration)}`;\n        }\n        setIsPaused(true);\n      });\n\n      videoCurrent.addEventListener('timeupdate', () => {\n        const currentTime = videoCurrent.currentTime;\n        const duration = videoCurrent.duration;\n\n        if (ProgressBar.current) {\n          ProgressBar.current.value = (currentTime / duration) * 100;\n        }\n\n        if (SeekerElement.current) {\n          SeekerElement.current.value = Math.floor(currentTime).toString();\n        }\n\n        if (TimeDisplayElement.current) {\n          TimeDisplayElement.current.innerText = `${formatTime(currentTime)} / ${formatTime(duration)}`;\n        }\n        currentTimeRef.current! = currentTime\n      });\n      videoCurrent.addEventListener('play', () => {setIsPaused(false)})\n      videoCurrent.addEventListener('pause', () => {setIsPaused(true)})\n\n      return () => {\n        if (videoCurrent) {\n          videoCurrent.removeEventListener('loadeddata', () => {});\n          videoCurrent.removeEventListener('timeupdate', () => {});\n        }\n      };\n    }\n  }, []);\n\n  const parseSRT = (srtData: string): Subtitle[] => {\n    const srtParser = new srtParser2();\n    const parsedData = srtParser.fromSrt(srtData);\n\n    return parsedData.map((subtitle: any) => ({\n      start: subtitle.startSeconds,\n      end: subtitle.endSeconds,\n      text: subtitle.text,\n    }));\n  };\n\n  useEffect(() => {\n    if (api.captionsPath) {\n      fetch(api.captionsPath)\n        .then((response) => response.text())\n        .then((srtData) => {\n          const parsedCaptions = parseSRT(srtData);\n          setCaptions(parsedCaptions);\n        })\n        .catch((error) => {\n          console.error('Error loading captions:', error);\n        });\n    }\n  }, [api.captionsPath]);\n\n  useEffect(() => {\n    const captionsContainer = CaptionsContainer.current;\n\n    if (captionsContainer) {\n      const updateCaptionsDisplay = () => {\n        const currentCaption = captions.find(\n          (caption) =>\n            currentTimeRef.current! >= caption.start && currentTimeRef.current! <= caption.end\n        );\n        // Enable custom styled subtitles\n        captionsContainer.innerHTML = currentCaption ? currentCaption.text : '';\n      };\n\n      updateCaptionsDisplay(); // Initial display\n\n      const intervalId = setInterval(updateCaptionsDisplay, 0.01); // Update every 0.01ms\n\n      return () => {\n        clearInterval(intervalId);\n      };\n    }\n  }, [captions]);\n  useEffect(() => {\n    let metadataTimeout: NodeJS.Timeout;\n\n    if (isPaused && currentTimeRef.current > 0) {\n      metadataTimeout = setTimeout(() => {\n        setShowMetadata(true);\n        ControlBar.current!.style.display = 'none'\n      }, 5000);\n    } else {\n      setShowMetadata(false);\n      ControlBar.current!.style.display = 'flex'\n    }\n\n    return () => {\n      clearTimeout(metadataTimeout);\n    };\n  }, [isPaused, currentTimeRef.current]);\n\n  const SEEK_BUFFER = 0.1;\n\n  function handleSeek(e: any) {\n    const seekTime = parseFloat(e.target.value);\n    const roundedSeekTime = Math.round(seekTime * 100) / 100;\n    setSeekValue(roundedSeekTime);\n  }\n\n  function handleSeekEnd() {\n    const videoCurrent = VideoElement.current;\n\n    if (videoCurrent) {\n      videoCurrent.currentTime = seekValue;\n      setTimeout(() => {\n        if (Math.abs(videoCurrent.currentTime - seekValue) <= SEEK_BUFFER) {\n          videoCurrent.removeEventListener('timeupdate', () => {});\n        }\n      }, 500);\n    }\n  }\n\n  function handlePlayPause() {\n    const videoCurrent = VideoElement.current;\n  \n    if (videoCurrent?.paused === false) {\n      videoCurrent?.pause();\n      setIsPaused(true);\n    } else {\n      // Add the 'clicked' class to initiate the ripple effect\n      setRippleClicked(true);\n  \n      videoCurrent?.play().then(() => {\n        setIsPaused(false);\n      }).catch((error) => {\n        console.error('Error playing video:', error);\n      });\n  \n      // Remove the 'clicked' class after a short delay (adjust as needed)\n      setTimeout(() => {\n        setRippleClicked(false);\n      }, 500);\n    }\n  }\n  \n\n  function handleMute() {\n    const videoCurrent = VideoElement.current;\n\n    if (videoCurrent && videoCurrent.muted === true) {\n      videoCurrent.muted = false;\n      setIsMuted(false);\n    } else if (videoCurrent) {\n      videoCurrent.muted = true;\n      setIsMuted(true);\n    }\n  }\n\n  function handleFullScreen() {\n    const playerControls = ControlBar.current!;\n    if (document.fullscreenElement) {\n      document.exitFullscreen();\n      Player.current?.classList.remove('lkui-fullscreen');\n      playerControls.style.display = 'flex';\n      TitleOnFS.current!.style.display = 'none'\n    } else {\n      playerControls.style.display = 'none';\n      Player.current?.requestFullscreen();\n      handleMouseMove()\n      Player.current?.classList.add('lkui-fullscreen');\n    }\n  }\n\n  if (api.width === 0 || api.width === null) {\n    api.width = 800;\n  }\n\n  function handleMouseMove() {\n    const playerControls = ControlBar.current!;\n\n    if (document.fullscreenElement) {\n      if (playerControls) {\n        VideoElement.current!.style.cursor = 'default'\n        playerControls.style.display = 'flex';\n        TitleOnFS.current!.style.display = 'block'\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {\n          if (playerControls) {\n            VideoElement.current!.style.cursor = 'none'\n            playerControls.style.display = 'none';\n            TitleOnFS.current!.style.display = 'none'\n          }\n        }, 4000);\n      }\n    } else {\n      if (playerControls) {\n        TitleOnFS.current!.style.display = 'none'\n        VideoElement.current!.style.cursor = 'default'\n        playerControls.style.display = 'flex';\n      }\n      clearTimeout(timeout);\n    }\n  }\n\n  enum QuickSeekDirection {\n    Back10,\n    Forward10,\n  }\n  function DesktopOnlyStuff() {\n    if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n      return null\n    }\n  \n    // Return something for the non-mobile case\n    return (\n      <>\n        &bull;&nbsp;\n        <div className='lkui-video-player-timecode-information'>\n          {api.videoName}\n        </div>\n      </>\n    );\n  }\n\n  function handleQuickSeek(direction: QuickSeekDirection) {\n    if (VideoElement.current) {\n      const currentTime = VideoElement.current.currentTime;\n\n      if (currentTime !== undefined) {\n        switch (direction) {\n          case QuickSeekDirection.Back10:\n            VideoElement.current.currentTime = currentTime - 10;\n            break;\n          case QuickSeekDirection.Forward10:\n            VideoElement.current.currentTime = currentTime + 10;\n            break;\n        }\n      }\n    }\n  }\n\n  function toggleCaptions() {\n    if (CaptionsContainer.current) {\n      if (captionsIsHidden === false) {\n        CaptionsContainer.current.style.display = 'none';\n        setCaptionsVisibility(true)\n      } else {\n        CaptionsContainer.current.style.display = 'block';\n        setCaptionsVisibility(false)\n      }\n    }\n  }\n\n  document.onkeydown = function (e) {\n    handleMouseMove();\n    e.preventDefault();\n    if (e.key === 'p' || e.key === ' ') {\n      handlePlayPause();\n    } else if (e.key === 'm') {\n      handleMute();\n    } else if (e.key === 'ArrowLeft') {\n      handleQuickSeek(QuickSeekDirection.Back10);\n    } else if (e.key === 'ArrowRight') {\n      handleQuickSeek(QuickSeekDirection.Forward10);\n    } else if (e.key === 'f') {\n      handleFullScreen();\n    } else if (e.key === 'Escape') {\n      // Also handle when Esc is pressed\n      e.preventDefault()\n      if (document.fullscreenElement) {\n        const playerControls = ControlBar.current!;\n        document.exitFullscreen();\n        Player.current?.classList.remove('lkui-fullscreen');\n        playerControls.style.display = 'flex';\n      }\n    } else if (e.key === 'c') {\n      toggleCaptions()\n    }\n  };\n\n  const metadataDisplay = showMetadata && (\n    <div className=\"lkui-video-player-idle\">\n      <div className='lkui-video-player-idle-details'>\n        <p>You're watching:</p>\n        <h1>{api.videoName}</h1>\n      </div>\n    </div>\n  )\n\n  return (\n    <div className=\"lkui-video-player\" ref={Player} style={{ width: api.width, height: api.height }} onMouseMove={handleMouseMove}>\n      <div className=\"lkui-video-player-containers\">\n        <div className='lkui-video-player-fullscreen-title' ref={TitleOnFS}>\n          <h2>{api.videoName}</h2>\n        </div>\n        {metadataDisplay}\n        <div className=\"lkui-video-captions\" ref={CaptionsContainer}></div>\n        <div className=\"lkui-video-player-controls\" ref={ControlBar}>\n          <div className=\"lkui-video-player-seekbar\">\n            <progress ref={ProgressBar} className=\"lkui-video-progress\" max={100}></progress>\n            <input\n              type=\"range\"\n              ref={SeekerElement}\n              className=\"lkui-video-player-seeker\"\n              value={seekValue}\n              min={0}\n              max={(VideoElement.current?.duration || 1) || 0}\n              step={0.000001}\n              onChange={handleSeek}\n              onInput={handleSeek}\n              onMouseUp={handleSeekEnd}\n              onTouchEnd={handleSeekEnd}\n            ></input>\n          </div>\n          <br></br>\n          <div className=\"lkui-video-player-button-controls\">\n            <div className=\"lkui-video-player-controls-left\">\n              <LKUITransparentButton className=\"lkui-play-button\" regComponent={PlayElement} onClick={handlePlayPause} title=\"Play (p)\"></LKUITransparentButton>\n              <LKUITransparentButton className=\"lkui-quick-seek-left\" regComponent={SkipBack1024Filled} onClick={() => handleQuickSeek(QuickSeekDirection.Back10)} title=\"Rewind 10 (<-)\"></LKUITransparentButton>\n              <LKUITransparentButton className=\"lkui-quick-seek-right\" regComponent={SkipForward1024Filled} onClick={() => handleQuickSeek(QuickSeekDirection.Forward10)} title=\"Forward 10 (->)\"></LKUITransparentButton>\n              <LKUITransparentButton className=\"lkui-mute-button\" regComponent={SpeakerElement} onClick={handleMute} title=\"Mute (m)\"></LKUITransparentButton>\n              <div className=\"lkui-video-player-timecode\">\n                <div className=\"lkui-video-player-timecode-primary\" ref={TimeDisplayElement}>\n                  00:00 / 00:00\n                </div>\n                <DesktopOnlyStuff />\n              </div>\n            </div>\n            <div className=\"lkui-video-player-controls-right\">\n              <LKUITransparentButton className='lkui-captions-button' regComponent={CaptionsElement} onClick={toggleCaptions} title='Toggle captions (c)'></LKUITransparentButton>\n              <LKUITransparentButton regComponent={FullScreenMaximize24Filled} onClick={handleFullScreen} title=\"Fullscreen (f)\"></LKUITransparentButton>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"lkui-spinner-container\" ref={Spinner}>\n        <div className=\"lkui-spinner\"></div>\n      </div>\n      <video \n        controls={false} \n        className=\"lkui-video-element\" \n        ref={VideoElement} \n        src={api.videoPath}\n        playsInline={true} \n        autoPlay={true} \n        onWaiting={handleBuffering} \n        onPlaying={handlePlaying} \n        onClick={() => {\n          handleMouseMove(); \n          handlePlayPause()\n        }}\n      ></video>\n    </div>\n  );\n}\n\nexport default LKUIVideoPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}