{"ast":null,"code":"/**\n * Maps the long pseudo name to the short pseudo name. Pseudos that match here will be ordered, everything else will\n * make their way to default style bucket. We reduce the pseudo name to save bundlesize.\n * Thankfully there aren't any overlaps, see: https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes.\n */\nconst pseudosMap = {\n  // :focus-within\n  'us-w': 'w',\n  // :focus-visible\n  'us-v': 'i',\n  // :link\n  nk: 'l',\n  // :visited\n  si: 'v',\n  // :focus\n  cu: 'f',\n  // :hover\n  ve: 'h',\n  // :active\n  ti: 'a'\n};\n\n/**\n * Gets the bucket depending on the pseudo.\n *\n * Input:\n *\n * ```\n * \":hover\"\n * \":focus:hover\"\n * ```\n *\n * Output:\n *\n * ```\n * \"h\"\n * \"f\"\n * ```\n *\n * @internal\n */\nfunction getStyleBucketName(selectors, layer, media, support, container) {\n  if (media) {\n    return 'm';\n  }\n\n  // We are grouping all the at-rules like @supports etc under `t` bucket.\n  if (layer || support) {\n    return 't';\n  }\n  if (container) {\n    return 'c';\n  }\n  if (selectors.length > 0) {\n    const normalizedPseudo = selectors[0].trim();\n    if (normalizedPseudo.charCodeAt(0) === 58 /* \":\" */) {\n      // We send through a subset of the string instead of the full pseudo name.\n      // For example:\n      // - `\"focus-visible\"` name would instead of `\"us-v\"`.\n      // - `\"focus\"` name would instead of `\"us\"`.\n      // Return a mapped pseudo else default bucket.\n\n      return pseudosMap[normalizedPseudo.slice(4, 8)] /* allows to avoid collisions between \"focus-visible\" & \"focus\" */ || pseudosMap[normalizedPseudo.slice(3, 5)] || 'd';\n    }\n  }\n\n  // Return default bucket\n  return 'd';\n}\nexport { getStyleBucketName };","map":{"version":3,"names":["pseudosMap","nk","si","cu","ve","ti","getStyleBucketName","selectors","layer","media","support","container","length","normalizedPseudo","trim","charCodeAt","slice"],"sources":["/Users/gideoncrawley/Projects/Lookeeloo/packages/core/src/runtime/getStyleBucketName.ts"],"sourcesContent":["import type { StyleBucketName } from '../types';\n\n/**\n * Maps the long pseudo name to the short pseudo name. Pseudos that match here will be ordered, everything else will\n * make their way to default style bucket. We reduce the pseudo name to save bundlesize.\n * Thankfully there aren't any overlaps, see: https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes.\n */\nconst pseudosMap: Record<string, StyleBucketName | undefined> = {\n  // :focus-within\n  'us-w': 'w',\n  // :focus-visible\n  'us-v': 'i',\n\n  // :link\n  nk: 'l',\n  // :visited\n  si: 'v',\n  // :focus\n  cu: 'f',\n  // :hover\n  ve: 'h',\n  // :active\n  ti: 'a',\n};\n\n/**\n * Gets the bucket depending on the pseudo.\n *\n * Input:\n *\n * ```\n * \":hover\"\n * \":focus:hover\"\n * ```\n *\n * Output:\n *\n * ```\n * \"h\"\n * \"f\"\n * ```\n *\n * @internal\n */\nexport function getStyleBucketName(\n  selectors: string[],\n  layer: string,\n  media: string,\n  support: string,\n  container: string,\n): StyleBucketName {\n  if (media) {\n    return 'm';\n  }\n\n  // We are grouping all the at-rules like @supports etc under `t` bucket.\n  if (layer || support) {\n    return 't';\n  }\n\n  if (container) {\n    return 'c';\n  }\n\n  if (selectors.length > 0) {\n    const normalizedPseudo = selectors[0].trim();\n\n    if (normalizedPseudo.charCodeAt(0) === 58 /* \":\" */) {\n      // We send through a subset of the string instead of the full pseudo name.\n      // For example:\n      // - `\"focus-visible\"` name would instead of `\"us-v\"`.\n      // - `\"focus\"` name would instead of `\"us\"`.\n      // Return a mapped pseudo else default bucket.\n\n      return (\n        pseudosMap[normalizedPseudo.slice(4, 8)] /* allows to avoid collisions between \"focus-visible\" & \"focus\" */ ||\n        pseudosMap[normalizedPseudo.slice(3, 5)] ||\n        'd'\n      );\n    }\n  }\n\n  // Return default bucket\n  return 'd';\n}\n"],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA,MAAMA,UAAuD,GAAG;EAC9D;EACA,MAAM,EAAE,GAAG;EACX;EACA,MAAM,EAAE,GAAG;EAEX;EACAC,EAAE,EAAE,GAAG;EACP;EACAC,EAAE,EAAE,GAAG;EACP;EACAC,EAAE,EAAE,GAAG;EACP;EACAC,EAAE,EAAE,GAAG;EACP;EACAC,EAAE,EAAE;AACN,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,kBAAkBA,CAChCC,SAAmB,EACnBC,KAAa,EACbC,KAAa,EACbC,OAAe,EACfC,SAAiB,EACA;EACjB,IAAIF,KAAK,EAAE;IACT,OAAO,GAAG;EACZ;;EAEA;EACA,IAAID,KAAK,IAAIE,OAAO,EAAE;IACpB,OAAO,GAAG;EACZ;EAEA,IAAIC,SAAS,EAAE;IACb,OAAO,GAAG;EACZ;EAEA,IAAIJ,SAAS,CAACK,MAAM,GAAG,CAAC,EAAE;IACxB,MAAMC,gBAAgB,GAAGN,SAAS,CAAC,CAAC,CAAC,CAACO,IAAI,EAAE;IAE5C,IAAID,gBAAgB,CAACE,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,YAAY;MACnD;MACA;MACA;MACA;MACA;;MAEA,OACEf,UAAU,CAACa,gBAAgB,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,uEACxChB,UAAU,CAACa,gBAAgB,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IACxC,GAAG;IAEP;EACF;;EAEA;EACA,OAAO,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}