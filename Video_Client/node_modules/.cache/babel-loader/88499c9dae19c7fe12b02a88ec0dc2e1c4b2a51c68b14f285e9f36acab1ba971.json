{"ast":null,"code":"import { DEBUG_RESET_CLASSES } from './constants.esm.js';\nimport { insertionFactory } from './insertionFactory.esm.js';\nimport { resolveResetStyleRules } from './runtime/resolveResetStyleRules.esm.js';\nfunction makeResetStyles(styles, factory = insertionFactory) {\n  const insertStyles = factory();\n  let ltrClassName = null;\n  let rtlClassName = null;\n  let cssRules = null;\n  function computeClassName(options) {\n    const {\n      dir,\n      renderer\n    } = options;\n    if (ltrClassName === null) {\n      [ltrClassName, rtlClassName, cssRules] = resolveResetStyleRules(styles);\n    }\n    insertStyles(renderer, Array.isArray(cssRules) ? {\n      r: cssRules\n    } : cssRules);\n    const className = dir === 'ltr' ? ltrClassName : rtlClassName || ltrClassName;\n    if (process.env.NODE_ENV !== 'production') {\n      DEBUG_RESET_CLASSES[className] = 1;\n    }\n    return className;\n  }\n  return computeClassName;\n}\nexport { makeResetStyles };","map":{"version":3,"names":["makeResetStyles","styles","factory","insertionFactory","insertStyles","ltrClassName","rtlClassName","cssRules","computeClassName","options","dir","renderer","resolveResetStyleRules","Array","isArray","r","className","process","env","NODE_ENV","DEBUG_RESET_CLASSES"],"sources":["/Users/gideoncrawley/Projects/Lookeeloo/packages/core/src/makeResetStyles.ts"],"sourcesContent":["import type { GriffelResetStyle } from '@griffel/style-types';\n\nimport { DEBUG_RESET_CLASSES } from './constants';\nimport { insertionFactory } from './insertionFactory';\nimport { resolveResetStyleRules } from './runtime/resolveResetStyleRules';\nimport type { CSSRulesByBucket, GriffelRenderer, GriffelInsertionFactory } from './types';\n\nexport interface MakeResetStylesOptions {\n  dir: 'ltr' | 'rtl';\n  renderer: GriffelRenderer;\n}\n\nexport function makeResetStyles(styles: GriffelResetStyle, factory: GriffelInsertionFactory = insertionFactory) {\n  const insertStyles = factory();\n\n  let ltrClassName: string | null = null;\n  let rtlClassName: string | null = null;\n\n  let cssRules: CSSRulesByBucket | string[] | null = null;\n\n  function computeClassName(options: MakeResetStylesOptions): string {\n    const { dir, renderer } = options;\n\n    if (ltrClassName === null) {\n      [ltrClassName, rtlClassName, cssRules] = resolveResetStyleRules(styles);\n    }\n\n    insertStyles(renderer, Array.isArray(cssRules) ? { r: cssRules! } : cssRules!);\n\n    const className = dir === 'ltr' ? ltrClassName : rtlClassName || ltrClassName;\n\n    if (process.env.NODE_ENV !== 'production') {\n      DEBUG_RESET_CLASSES[className] = 1;\n    }\n\n    return className;\n  }\n\n  return computeClassName;\n}\n"],"mappings":";;;AAYO,SAASA,eAAeA,CAACC,MAAyB,EAAEC,OAAgC,GAAGC,gBAAgB,EAAE;EAC9G,MAAMC,YAAY,GAAGF,OAAO,EAAE;EAE9B,IAAIG,YAA2B,GAAG,IAAI;EACtC,IAAIC,YAA2B,GAAG,IAAI;EAEtC,IAAIC,QAA4C,GAAG,IAAI;EAEvD,SAASC,gBAAgBA,CAACC,OAA+B,EAAU;IACjE,MAAM;MAAEC,GAAG;MAAEC;IAAS,CAAC,GAAGF,OAAO;IAEjC,IAAIJ,YAAY,KAAK,IAAI,EAAE;MACzB,CAACA,YAAY,EAAEC,YAAY,EAAEC,QAAQ,CAAC,GAAGK,sBAAsB,CAACX,MAAM,CAAC;IACzE;IAEAG,YAAY,CAACO,QAAQ,EAAEE,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,GAAG;MAAEQ,CAAC,EAAER;KAAW,GAAGA,QAAS,CAAC;IAE9E,MAAMS,SAAS,GAAGN,GAAG,KAAK,KAAK,GAAGL,YAAY,GAAGC,YAAY,IAAID,YAAY;IAE7E,IAAIY,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzCC,mBAAmB,CAACJ,SAAS,CAAC,GAAG,CAAC;IACpC;IAEA,OAAOA,SAAS;EAClB;EAEA,OAAOR,gBAAgB;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}